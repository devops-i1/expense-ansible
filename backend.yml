- name: Backend Setup
  hosts: all
  become: yes
  tasks:
    - name: Disable default Nodejs version module
      ansible.builtin.shell: dnf module disable nodejs -y

    - name: Enable Nodejs module for v20
      ansible.builtin.shell: dnf module enable nodejs:20 -y

    - name: Install Nodejs
      ansible.builtin.dnf:
        name: nodejs
        state: installed

    - name: Adding application user
      ansible.builtin.user:
        name: expense

    - name: Clean the old content
      ansible.builtin.file:
        path: /app
        state: absent

    - name: Create app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Download and Extract app content
      ansible.builtin.unarchive:
        src: https://expense-artifacts.s3.amazonaws.com/expense-backend-v2.zip
        dest: /app
        remote_src: yes

    - name: Download Nodejs dependencies
      community.general.npm:
        path: /app
        state: latest

    - name: Copy backend service file
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service

    - name: Install Python MySQL client
      ansible.builtin.dnf:
        name:
          - PyMySQL
          - cryptography
        executable: pip3.11


    - name: Load Schema
      community.mysql.mysql_db:
        state: import
        name: all
        target: /app/schema/backend.sql
        login_user: root
        login_password: ExpenseApp@1
        login_host: mysql-dev.akhilsaidevops.online
#    - name: To load schema
#      ansible.builtin.shell: mysql -h mysql-dev.akhilsaidevops.online  -uroot -pExpenseApp@1 < /app/schema/backend.sql

    - name: Start Backend service
      ansible.builtin.systemd_service:
        name: backend
        state: restarted
        enabled: yes
        daemon_reload: yes